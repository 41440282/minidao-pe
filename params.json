{"name":"Minidao-pe","tagline":"Minidao-PE版，一款轻量级持久层解决方案，类Mybatis的SQL方式，可无缝集成Hibernate项目，解决Hibernate项目想支持类Mybatis功能问题。 ","body":"MiniDao-PE精简版\r\n=======\r\n\r\n\r\nMiniDao-PE 简介及特征\r\n\r\nMiniDao-PE 是一种持久化解决方案，类似mybatis的持久层解决方案，可以轻松集成入Hibernate工程，事务统一管理，解决了Hibernate工程想支类mybaits的功能问题。 具有以下特征:\r\n\r\n* 1.O/R mapping不用设置xml，零配置便于维护\r\n* 2.不需要了解JDBC的知识\r\n* 3.SQL语句和java代码的分离\r\n* 4.接口和实现分离，不用写持久层代码，用户只需写接口，以及某些接口方法对应的sql 它会通过AOP自动生成实现类\r\n* 5.支持自动事务处理和手动事务处理\r\n* 6.支持与hibernate轻量级无缝集成\r\n* 7.SQL支持脚本语言\r\n\r\n###接口和SQL文件对应目录\r\n![github](http://www.jeecg.org/data/attachment/forum/201308/18/224051ey14ehqe000iegja.jpg \"minidao\")\r\n\r\n\r\n\r\n### 接口定义[EmployeeDao.java]  \r\n    @MiniDao\r\n    public interface EmployeeDao {\r\n     @Arguments(\"employee\")\r\n     public List<Map> getAllEmployees(Employee employee);\r\n    \r\n     @Arguments(\"empno\")\r\n     Employee getEmployee(String empno);\r\n    \r\n     @Arguments({\"empno\",\"name\"})\r\n     Map getMap(String empno,String name);\r\n\r\n     @Sql(\"SELECT count(*) FROM employee\")\r\n     Integer getCount();\r\n\r\n     @Arguments(\"employee\")\r\n     int update(Employee employee);\r\n\r\n     @Arguments(\"employee\")\r\n     void insert(Employee employee);\r\n   }\r\n    \r\n    \r\n    \r\n### SQL文件[EmployeeDao_getAllEmployees.sql]\r\n    SELECT * FROM employee where 1=1 \r\n    <#if employee.age ?exists>\r\n\tand age = :employee.age\r\n    </#if>\r\n    <#if employee.name ?exists>\r\n\tand name = :employee.name\r\n    </#if>\r\n    <#if employee.empno ?exists>\r\n\tand empno = :employee.empno\r\n    </#if>\r\n\r\n### MiniDao接口配置\r\n        <!-- 注册MiniDao接口 -->\r\n\t<bean class=\"org.jeecgframework.minidao.factory.MiniDaoBeanFactory\">\r\n\t\t<property name=\"packagesToScan\">\r\n\t\t\t<list>\r\n\t\t\t\t<value>examples.dao.*</value>\r\n\t\t\t</list>\r\n\t\t</property>\r\n\t</bean>\r\n\r\n### 测试代码\r\n    public class Client {\r\n    public static void main(String args[]) {\r\n\t\tBeanFactory factory = new ClassPathXmlApplicationContext(\r\n\t\t\t\t\"applicationContext.xml\");\r\n     \t\t\r\n\t\tEmployeeDao employeeDao = (EmployeeDao) factory.getBean(\"employeeDao\");\r\n\t\tEmployee employee = new Employee();\r\n\t\tList<Map> list =  employeeDao.getAllEmployees(employee);\r\n\t\tfor(Map mp:list){\r\n\t\t\tSystem.out.println(mp.get(\"id\"));\r\n\t\t\tSystem.out.println(mp.get(\"name\"));\r\n\t\t\tSystem.out.println(mp.get(\"empno\"));\r\n\t\t\tSystem.out.println(mp.get(\"age\"));\r\n\t\t\tSystem.out.println(mp.get(\"birthday\"));\r\n\t\t\tSystem.out.println(mp.get(\"salary\"));\r\n\t\t}\r\n\t}\r\n    }\r\n\r\n\r\n技术交流\r\n-----------------------------------\r\n* 作 者：  Jeecg团队\r\n* 论 坛： [www.jeecg.org](http://www.jeecg.org)\r\n* 邮 箱：  jeecg@sina.com\r\n* QQ交流群：106838471\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}